USE [Facebook]
GO

--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

MERGE INTO [User] AS [Target]
USING (VALUES
  (1,N'Nicole Franco',0)
 ,(2,N'Pablo Terry',0)
 ,(3,N'Desiree Lambert',0)
 ,(4,N'Chadwick Stephenson',0)
 ,(5,N'Daphne Gilbert',1)
 ,(6,N'Sonya Mosley',1)
 ,(7,N'Katina Browning',0)
 ,(8,N'Kari Boyd',1)
 ,(9,N'Seth Mc Bride',0)
 ,(10,N'Bernard Knight',0)
 ,(11,N'Devon Fleming',1)
 ,(12,N'Janet Ramos',1)
 ,(13,N'Jose Velazquez',0)
 ,(14,N'Joshua Conrad',1)
 ,(15,N'Cassandra Randall',1)
 ,(16,N'Marlon Ingram',0)
 ,(17,N'Karl Mac Donald',1)
 ,(18,N'Shari Kelley',1)
 ,(19,N'Gabriel Proctor',1)
 ,(20,N'Judy Hatfield',0)
 ,(21,N'Alan Norton',1)
 ,(22,N'Gabriela Little',0)
 ,(23,N'Mario Hampton',1)
 ,(24,N'Jeffery Shepherd',1)
 ,(25,N'Joni Kline',1)
 ,(26,N'Jeanette Vance',1)
 ,(27,N'Juanita Craig',1)
 ,(28,N'Nina Ponce',1)
 ,(29,N'Abigail Chavez',0)
 ,(30,N'Latoya Peters',1)
 ,(31,N'Sandy Acosta',0)
 ,(32,N'Alissa Perkins',0)
 ,(33,N'Roberto Lutz',0)
 ,(34,N'Shane Singleton',0)
 ,(35,N'Claude Bowman',0)
 ,(36,N'Jonathan Shepard',1)
 ,(37,N'Miriam Floyd',0)
 ,(38,N'Kareem Cabrera',0)
 ,(39,N'Monte Hatfield',1)
 ,(40,N'Nikki Roach',0)
 ,(41,N'Brian Clay',1)
 ,(42,N'Megan Esparza',0)
 ,(43,N'Robert Stanton',1)
 ,(44,N'Israel Warren',1)
 ,(45,N'Gina Johns',0)
 ,(46,N'Eddie Esparza',1)
 ,(47,N'Frances Mac Donald',1)
 ,(48,N'Claudia Moore',0)
 ,(49,N'Brad Joseph',1)
 ,(50,N'Cedric Vaughn',0)
 ,(51,N'Shane Conner',0)
 ,(52,N'Tracy Thomas',1)
 ,(53,N'Miriam O''Neal',1)
 ,(54,N'Marisa Bennett',0)
 ,(55,N'Veronica Mata',0)
 ,(56,N'Tommy Rojas',1)
 ,(57,N'Marcia Clarke',1)
 ,(58,N'Andrew Gallagher',1)
 ,(59,N'Lewis Wright',1)
 ,(60,N'Stacy Mc Intyre',0)
 ,(61,N'Misty Rivera',1)
 ,(62,N'Angela Ochoa',1)
 ,(63,N'Erin Reynolds',1)
 ,(64,N'Tracie Petty',0)
 ,(65,N'Lauren Randolph',0)
 ,(66,N'Carlton Doyle',1)
 ,(67,N'Arnold De Leon',0)
 ,(68,N'Patrice Jensen',1)
 ,(69,N'Mike Robles',1)
 ,(70,N'Latonya Harmon',0)
 ,(71,N'Ramiro Harding',0)
 ,(72,N'Kenneth Mc Carthy',0)
 ,(73,N'Grace Mack',1)
 ,(74,N'Theodore Welch',0)
 ,(75,N'Miguel Brady',1)
 ,(76,N'Gretchen Ayala',1)
 ,(77,N'Shane Nixon',1)
 ,(78,N'Kathryn Warren',1)
 ,(79,N'Alfred Ayers',0)
 ,(80,N'Terrence Patrick',0)
 ,(81,N'Cary Olson',1)
 ,(82,N'Kari Valenzuela',0)
 ,(83,N'Allison Hull',1)
 ,(84,N'Wayne Choi',1)
 ,(85,N'Trina Garza',0)
 ,(86,N'Gabriel O''Connor',0)
 ,(87,N'Demond Kent',1)
 ,(88,N'Jeffrey Brewer',1)
 ,(89,N'Shaun Mc Knight',1)
 ,(90,N'Alisha Cuevas',0)
 ,(91,N'Lee Mc Mahon',0)
 ,(92,N'Dana Perkins',1)
 ,(93,N'Bethany Horn',1)
 ,(94,N'Kelvin Casey',1)
 ,(95,N'Ericka Shelton',1)
 ,(96,N'Karla Wilkins',0)
 ,(97,N'Travis Rush',0)
 ,(98,N'Laura Hurst',0)
 ,(99,N'Wendy Andersen',0)
 ,(100,N'Cecil Mora',1)
) AS [Source] ([UserID],[UserName],[Online])
ON ([Target].[UserID] = [Source].[UserID])
WHEN MATCHED AND (
	NULLIF([Source].[UserName], [Target].[UserName]) IS NOT NULL OR NULLIF([Target].[UserName], [Source].[UserName]) IS NOT NULL OR 
	NULLIF([Source].[Online], [Target].[Online]) IS NOT NULL OR NULLIF([Target].[Online], [Source].[Online]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[UserName] = [Source].[UserName], 
  [Target].[Online] = [Source].[Online]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([UserID],[UserName],[Online])
 VALUES([Source].[UserID],[Source].[UserName],[Source].[Online])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [User]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[User] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO


SET NOCOUNT OFF
GO

USE [Facebook]
GO

--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

MERGE INTO [Relationship] AS [Target]
USING (VALUES
  (1,73,25)
 ,(2,82,12)
 ,(3,77,47)
 ,(4,56,78)
 ,(5,21,66)
 ,(6,56,44)
 ,(7,91,36)
 ,(8,45,95)
 ,(9,98,11)
 ,(10,28,65)
 ,(11,30,3)
 ,(12,47,25)
 ,(13,64,33)
 ,(14,47,99)
 ,(15,99,69)
 ,(16,4,66)
 ,(17,87,29)
 ,(18,100,62)
 ,(19,68,71)
 ,(20,32,71)
 ,(21,82,95)
 ,(22,85,10)
 ,(23,100,17)
 ,(24,4,39)
 ,(25,70,80)
 ,(26,53,17)
 ,(27,94,80)
 ,(28,69,31)
 ,(29,55,83)
 ,(30,9,89)
 ,(31,19,56)
 ,(32,46,72)
 ,(33,30,70)
 ,(34,99,2)
 ,(35,65,100)
 ,(36,77,81)
 ,(37,4,86)
 ,(38,39,7)
 ,(39,35,52)
 ,(40,96,53)
 ,(41,51,28)
 ,(42,72,100)
 ,(43,12,70)
 ,(44,28,39)
 ,(45,91,44)
 ,(46,80,68)
 ,(47,34,68)
 ,(48,46,48)
 ,(49,15,25)
 ,(50,23,36)
 ,(51,42,53)
 ,(52,72,17)
 ,(53,62,35)
 ,(54,49,70)
 ,(55,20,40)
 ,(56,88,16)
 ,(57,83,95)
 ,(58,74,9)
 ,(59,86,98)
 ,(60,68,49)
 ,(61,63,64)
 ,(62,22,5)
 ,(63,90,13)
 ,(64,90,22)
 ,(65,9,9)
 ,(66,84,32)
 ,(67,18,55)
 ,(68,65,31)
 ,(69,83,100)
 ,(70,22,88)
 ,(71,100,80)
 ,(72,49,23)
 ,(73,66,11)
 ,(74,72,18)
 ,(75,81,43)
 ,(76,11,96)
 ,(77,73,41)
 ,(78,72,78)
 ,(79,13,95)
 ,(80,91,13)
 ,(81,19,50)
 ,(82,48,33)
 ,(83,55,7)
 ,(84,33,47)
 ,(85,68,37)
 ,(86,47,39)
 ,(87,84,38)
 ,(88,81,1)
 ,(89,80,62)
 ,(90,77,84)
 ,(91,94,86)
 ,(92,30,78)
 ,(93,53,9)
 ,(94,67,3)
 ,(95,34,89)
 ,(96,29,23)
 ,(97,83,88)
 ,(98,23,48)
 ,(99,19,31)
 ,(100,7,13)
 ,(101,63,13)
 ,(102,70,38)
 ,(103,64,48)
 ,(104,93,37)
 ,(105,23,56)
 ,(106,93,31)
 ,(107,7,7)
 ,(108,91,17)
 ,(109,68,27)
 ,(110,10,44)
 ,(111,15,76)
 ,(112,11,18)
 ,(113,61,14)
 ,(114,96,86)
 ,(115,50,100)
 ,(116,15,32)
 ,(117,68,99)
 ,(118,57,66)
 ,(119,23,86)
 ,(120,62,70)
 ,(121,1,95)
 ,(122,37,55)
 ,(123,86,69)
 ,(124,7,17)
 ,(125,29,2)
 ,(126,71,3)
 ,(127,96,14)
 ,(128,99,8)
 ,(129,39,30)
 ,(130,53,21)
 ,(131,29,9)
 ,(132,51,93)
 ,(133,54,48)
 ,(134,6,83)
 ,(135,29,100)
 ,(136,50,13)
 ,(137,85,85)
 ,(138,62,70)
 ,(139,11,92)
 ,(140,75,6)
 ,(141,41,32)
 ,(142,94,21)
 ,(143,14,75)
 ,(144,70,18)
 ,(145,62,9)
 ,(146,84,69)
 ,(147,69,64)
 ,(148,57,24)
 ,(149,18,4)
 ,(150,19,57)
 ,(151,61,25)
 ,(152,26,23)
 ,(153,100,63)
 ,(154,57,61)
 ,(155,7,19)
 ,(156,27,59)
 ,(157,85,69)
 ,(158,57,32)
 ,(159,65,35)
 ,(160,52,54)
 ,(161,98,18)
 ,(162,8,100)
 ,(163,52,88)
 ,(164,16,6)
 ,(165,82,36)
 ,(166,65,83)
 ,(167,58,71)
 ,(168,56,32)
 ,(169,68,86)
 ,(170,100,88)
 ,(171,31,48)
 ,(172,7,30)
 ,(173,47,74)
 ,(174,49,81)
 ,(175,22,39)
 ,(176,8,74)
 ,(177,24,80)
 ,(178,16,51)
 ,(179,45,8)
 ,(180,46,34)
 ,(181,2,39)
 ,(182,39,90)
 ,(183,82,5)
 ,(184,21,73)
 ,(185,92,97)
 ,(186,3,87)
 ,(187,51,31)
 ,(188,97,88)
 ,(189,100,65)
 ,(190,2,42)
 ,(191,66,44)
 ,(192,28,54)
 ,(193,97,35)
 ,(194,59,38)
 ,(195,78,88)
 ,(196,33,33)
 ,(197,43,33)
 ,(198,98,69)
 ,(199,89,83)
 ,(200,98,26)
 ,(201,26,98)
 ,(202,14,33)
 ,(203,90,39)
 ,(204,18,16)
 ,(205,89,10)
 ,(206,55,96)
 ,(207,79,49)
 ,(208,52,83)
 ,(209,36,23)
 ,(210,100,45)
 ,(211,4,79)
 ,(212,70,18)
 ,(213,13,24)
 ,(214,20,2)
 ,(215,50,15)
 ,(216,59,29)
 ,(217,27,95)
 ,(218,32,16)
 ,(219,25,10)
 ,(220,79,50)
 ,(221,14,53)
 ,(222,62,83)
 ,(223,56,67)
 ,(224,66,45)
 ,(225,35,44)
 ,(226,3,94)
 ,(227,10,95)
 ,(228,88,37)
 ,(229,72,93)
 ,(230,90,6)
 ,(231,66,42)
 ,(232,26,12)
 ,(233,27,69)
 ,(234,48,83)
 ,(235,20,36)
 ,(236,89,7)
 ,(237,50,52)
 ,(238,64,89)
 ,(239,32,63)
 ,(240,37,1)
 ,(241,25,38)
 ,(242,100,49)
 ,(243,62,66)
 ,(244,1,21)
 ,(245,99,63)
 ,(246,97,27)
 ,(247,16,30)
 ,(248,78,34)
 ,(249,10,23)
 ,(250,20,60)
 ,(251,7,38)
 ,(252,12,18)
 ,(253,74,59)
 ,(254,11,33)
 ,(255,84,74)
 ,(256,65,16)
 ,(257,58,66)
 ,(258,25,94)
 ,(259,84,72)
 ,(260,86,16)
 ,(261,45,1)
 ,(262,91,13)
 ,(263,81,91)
 ,(264,47,17)
 ,(265,35,3)
 ,(266,78,68)
 ,(267,43,49)
 ,(268,65,42)
 ,(269,100,66)
 ,(270,61,9)
 ,(271,9,77)
 ,(272,63,7)
 ,(273,100,53)
 ,(274,88,9)
 ,(275,54,12)
 ,(276,14,4)
 ,(277,1,18)
 ,(278,56,47)
 ,(279,68,83)
 ,(280,38,18)
 ,(281,87,65)
 ,(282,33,62)
 ,(283,79,14)
 ,(284,52,33)
 ,(285,83,69)
 ,(286,55,24)
 ,(287,53,53)
 ,(288,17,36)
 ,(289,64,9)
 ,(290,56,21)
 ,(291,32,41)
 ,(292,25,58)
 ,(293,81,17)
 ,(294,47,48)
 ,(295,93,1)
 ,(296,34,26)
 ,(297,20,59)
 ,(298,16,49)
 ,(299,67,18)
 ,(300,21,95)
 ,(301,54,78)
 ,(302,51,89)
 ,(303,78,69)
 ,(304,49,15)
 ,(305,11,83)
 ,(306,44,32)
 ,(307,12,66)
 ,(308,86,50)
 ,(309,57,22)
 ,(310,71,70)
 ,(311,65,98)
 ,(312,2,20)
 ,(313,57,12)
 ,(314,46,55)
 ,(315,100,52)
 ,(316,13,40)
 ,(317,13,99)
 ,(318,29,58)
 ,(319,64,49)
 ,(320,80,80)
 ,(321,26,16)
 ,(322,27,14)
 ,(323,2,33)
 ,(324,45,45)
 ,(325,30,69)
 ,(326,84,20)
 ,(327,83,90)
 ,(328,54,5)
 ,(329,96,9)
 ,(330,21,86)
 ,(331,95,46)
 ,(332,86,69)
 ,(333,90,30)
 ,(334,47,89)
 ,(335,85,40)
 ,(336,36,77)
 ,(337,56,93)
 ,(338,31,100)
 ,(339,42,50)
 ,(340,40,37)
 ,(341,43,58)
 ,(342,67,3)
 ,(343,61,15)
 ,(344,94,40)
 ,(345,92,24)
 ,(346,30,22)
 ,(347,69,46)
 ,(348,35,63)
 ,(349,47,97)
 ,(350,80,61)
 ,(351,22,28)
 ,(352,91,1)
 ,(353,52,1)
 ,(354,87,38)
 ,(355,95,79)
 ,(356,28,65)
 ,(357,50,56)
 ,(358,33,24)
 ,(359,19,47)
 ,(360,27,64)
 ,(361,62,43)
 ,(362,59,61)
 ,(363,91,42)
 ,(364,37,36)
 ,(365,76,24)
 ,(366,79,29)
 ,(367,12,91)
 ,(368,11,24)
 ,(369,62,16)
 ,(370,64,76)
 ,(371,58,47)
 ,(372,82,100)
 ,(373,87,9)
 ,(374,24,12)
 ,(375,38,22)
 ,(376,60,13)
 ,(377,67,99)
 ,(378,9,94)
 ,(379,54,21)
 ,(380,100,47)
 ,(381,16,74)
 ,(382,49,27)
 ,(383,7,9)
 ,(384,16,48)
 ,(385,99,59)
 ,(386,4,46)
 ,(387,34,69)
 ,(388,4,92)
 ,(389,52,10)
 ,(390,58,76)
 ,(391,86,21)
 ,(392,23,70)
 ,(393,12,54)
 ,(394,16,87)
 ,(395,78,95)
 ,(396,84,98)
 ,(397,76,62)
 ,(398,25,80)
 ,(399,18,16)
 ,(400,13,96)
 ,(401,18,32)
 ,(402,58,23)
 ,(403,73,48)
 ,(404,83,22)
 ,(405,23,15)
 ,(406,41,28)
 ,(407,5,92)
 ,(408,29,90)
 ,(409,49,16)
 ,(410,36,67)
 ,(411,61,66)
 ,(412,42,62)
 ,(413,80,4)
 ,(414,20,100)
 ,(415,11,90)
 ,(416,14,16)
 ,(417,53,52)
 ,(418,76,94)
 ,(419,38,77)
 ,(420,73,79)
 ,(421,46,61)
 ,(422,9,99)
 ,(423,59,15)
 ,(424,5,40)
 ,(425,78,55)
 ,(426,35,78)
 ,(427,70,47)
 ,(428,71,23)
 ,(429,47,17)
 ,(430,55,25)
 ,(431,84,52)
 ,(432,43,20)
 ,(433,91,78)
 ,(434,41,26)
 ,(435,82,16)
 ,(436,59,51)
 ,(437,76,80)
 ,(438,24,88)
 ,(439,93,34)
 ,(440,59,32)
 ,(441,100,54)
 ,(442,6,80)
 ,(443,55,76)
 ,(444,17,43)
 ,(445,97,10)
 ,(446,45,59)
 ,(447,44,66)
 ,(448,93,54)
 ,(449,6,97)
 ,(450,65,80)
 ,(451,31,46)
 ,(452,100,69)
 ,(453,87,3)
 ,(454,46,38)
 ,(455,67,35)
 ,(456,10,33)
 ,(457,100,9)
 ,(458,69,8)
 ,(459,6,67)
 ,(460,89,37)
 ,(461,71,81)
 ,(462,34,70)
 ,(463,82,73)
 ,(464,94,92)
 ,(465,52,16)
 ,(466,19,47)
 ,(467,52,85)
 ,(468,39,78)
 ,(469,38,84)
 ,(470,53,39)
 ,(471,39,36)
 ,(472,30,64)
 ,(473,84,61)
 ,(474,80,46)
 ,(475,73,25)
 ,(476,41,82)
 ,(477,54,24)
 ,(478,43,72)
 ,(479,8,31)
 ,(480,34,96)
 ,(481,92,12)
 ,(482,78,93)
 ,(483,66,26)
 ,(484,83,38)
 ,(485,24,80)
 ,(486,84,84)
 ,(487,56,18)
 ,(488,46,41)
 ,(489,75,91)
 ,(490,73,83)
 ,(491,59,43)
 ,(492,7,73)
 ,(493,19,22)
 ,(494,5,97)
 ,(495,89,51)
 ,(496,66,84)
 ,(497,24,8)
 ,(498,61,84)
 ,(499,65,28)
 ,(500,79,64)
 ,(501,94,75)
 ,(502,5,89)
 ,(503,55,70)
 ,(504,54,58)
 ,(505,26,44)
 ,(506,2,82)
 ,(507,17,8)
 ,(508,8,58)
 ,(509,73,13)
 ,(510,27,54)
 ,(511,56,10)
 ,(512,57,38)
 ,(513,62,78)
 ,(514,72,72)
 ,(515,97,26)
 ,(516,93,89)
 ,(517,69,44)
 ,(518,100,35)
 ,(519,71,13)
 ,(520,69,32)
 ,(521,63,29)
 ,(522,6,44)
 ,(523,65,87)
 ,(524,66,2)
 ,(525,94,97)
 ,(526,33,64)
 ,(527,11,43)
 ,(528,80,64)
 ,(529,91,95)
 ,(530,8,42)
 ,(531,17,75)
 ,(532,93,40)
 ,(533,79,44)
 ,(534,30,67)
 ,(535,41,21)
 ,(536,88,24)
 ,(537,24,23)
 ,(538,12,69)
 ,(539,57,95)
 ,(540,22,98)
 ,(541,68,76)
 ,(542,49,61)
 ,(543,73,29)
 ,(544,49,38)
 ,(545,17,74)
 ,(546,3,5)
 ,(547,45,96)
 ,(548,47,50)
 ,(549,8,72)
 ,(550,96,63)
 ,(551,97,40)
 ,(552,25,73)
 ,(553,91,72)
 ,(554,97,96)
 ,(555,16,35)
 ,(556,88,31)
 ,(557,41,2)
 ,(558,89,69)
 ,(559,61,62)
 ,(560,94,81)
 ,(561,91,39)
 ,(562,38,45)
 ,(563,17,63)
 ,(564,66,72)
 ,(565,10,80)
 ,(566,64,71)
 ,(567,79,95)
 ,(568,33,11)
 ,(569,32,52)
 ,(570,10,2)
 ,(571,70,66)
 ,(572,57,76)
 ,(573,43,41)
 ,(574,49,16)
 ,(575,1,57)
 ,(576,15,69)
 ,(577,34,16)
 ,(578,17,50)
 ,(579,50,29)
 ,(580,92,92)
 ,(581,88,69)
 ,(582,65,94)
 ,(583,72,93)
 ,(584,95,33)
 ,(585,11,2)
 ,(586,93,2)
 ,(587,3,68)
 ,(588,83,48)
 ,(589,14,33)
 ,(590,53,90)
 ,(591,47,23)
 ,(592,35,55)
 ,(593,52,7)
 ,(594,63,15)
 ,(595,32,59)
 ,(596,30,32)
 ,(597,32,98)
 ,(598,8,57)
 ,(599,39,58)
 ,(600,54,3)
 ,(601,24,11)
 ,(602,13,85)
 ,(603,16,99)
 ,(604,98,70)
 ,(605,27,98)
 ,(606,41,65)
 ,(607,82,33)
 ,(608,43,57)
 ,(609,96,40)
 ,(610,2,66)
 ,(611,54,16)
 ,(612,25,52)
 ,(613,40,41)
 ,(614,70,70)
 ,(615,7,12)
 ,(616,27,46)
 ,(617,66,52)
 ,(618,23,30)
 ,(619,55,70)
 ,(620,17,79)
 ,(621,62,3)
 ,(622,97,47)
 ,(623,19,78)
 ,(624,79,62)
 ,(625,63,80)
 ,(626,36,11)
 ,(627,6,70)
 ,(628,80,26)
 ,(629,18,57)
 ,(630,72,26)
 ,(631,83,72)
 ,(632,27,59)
 ,(633,78,93)
 ,(634,97,26)
 ,(635,68,82)
 ,(636,75,84)
 ,(637,50,95)
 ,(638,74,23)
 ,(639,69,36)
 ,(640,71,38)
 ,(641,11,69)
 ,(642,60,12)
 ,(643,87,9)
 ,(644,13,68)
 ,(645,99,75)
 ,(646,23,71)
 ,(647,95,15)
 ,(648,83,37)
 ,(649,57,3)
 ,(650,5,13)
 ,(651,64,80)
 ,(652,10,69)
 ,(653,53,88)
 ,(654,22,79)
 ,(655,92,1)
 ,(656,28,64)
 ,(657,95,8)
 ,(658,37,38)
 ,(659,36,91)
 ,(660,92,87)
 ,(661,36,95)
 ,(662,3,7)
 ,(663,26,100)
 ,(664,25,14)
 ,(665,19,95)
 ,(666,28,57)
 ,(667,47,60)
 ,(668,44,15)
 ,(669,2,89)
 ,(670,32,29)
 ,(671,78,51)
 ,(672,93,30)
 ,(673,54,95)
 ,(674,85,33)
 ,(675,7,10)
 ,(676,2,92)
 ,(677,10,39)
 ,(678,6,11)
 ,(679,80,87)
 ,(680,41,9)
 ,(681,41,97)
 ,(682,23,33)
 ,(683,23,24)
 ,(684,13,44)
 ,(685,8,47)
 ,(686,74,3)
 ,(687,74,72)
 ,(688,56,14)
 ,(689,5,26)
 ,(690,40,18)
 ,(691,81,77)
 ,(692,13,58)
 ,(693,39,32)
 ,(694,77,49)
 ,(695,36,43)
 ,(696,9,62)
 ,(697,35,12)
 ,(698,63,95)
 ,(699,95,73)
 ,(700,71,19)
 ,(701,76,12)
 ,(702,52,100)
 ,(703,81,48)
 ,(704,25,74)
 ,(705,27,62)
 ,(706,72,51)
 ,(707,56,74)
 ,(708,69,55)
 ,(709,16,70)
 ,(710,91,9)
 ,(711,19,26)
 ,(712,89,97)
 ,(713,57,51)
 ,(714,95,83)
 ,(715,51,91)
 ,(716,13,63)
 ,(717,80,84)
 ,(718,13,57)
 ,(719,17,67)
 ,(720,45,92)
 ,(721,55,85)
 ,(722,92,46)
 ,(723,39,90)
 ,(724,62,72)
 ,(725,52,53)
 ,(726,65,94)
 ,(727,54,98)
 ,(728,77,47)
 ,(729,49,91)
 ,(730,98,49)
 ,(731,67,81)
 ,(732,47,44)
 ,(733,12,39)
 ,(734,9,68)
 ,(735,65,97)
 ,(736,90,98)
 ,(737,42,85)
 ,(738,98,50)
 ,(739,87,82)
 ,(740,37,97)
 ,(741,19,30)
 ,(742,5,18)
 ,(743,40,45)
 ,(744,15,17)
 ,(745,22,93)
 ,(746,93,80)
 ,(747,57,7)
 ,(748,44,50)
 ,(749,27,59)
 ,(750,23,80)
 ,(751,30,79)
 ,(752,23,55)
 ,(753,47,28)
 ,(754,50,81)
 ,(755,17,35)
 ,(756,85,66)
 ,(757,13,10)
 ,(758,20,77)
 ,(759,74,22)
 ,(760,62,69)
 ,(761,18,53)
 ,(762,79,28)
 ,(763,20,65)
 ,(764,19,22)
 ,(765,24,28)
 ,(766,72,82)
 ,(767,77,59)
 ,(768,48,83)
 ,(769,31,86)
 ,(770,61,93)
 ,(771,71,78)
 ,(772,82,34)
 ,(773,26,75)
 ,(774,81,71)
 ,(775,27,62)
 ,(776,50,67)
 ,(777,52,2)
 ,(778,25,73)
 ,(779,41,80)
 ,(780,59,73)
 ,(781,9,87)
 ,(782,11,48)
 ,(783,51,88)
 ,(784,26,11)
 ,(785,69,70)
 ,(786,45,26)
 ,(787,1,16)
 ,(788,63,58)
 ,(789,93,34)
 ,(790,81,31)
 ,(791,78,89)
 ,(792,23,8)
 ,(793,25,29)
 ,(794,25,14)
 ,(795,19,44)
 ,(796,40,3)
 ,(797,86,54)
 ,(798,22,24)
 ,(799,91,90)
 ,(800,50,11)
 ,(801,16,22)
 ,(802,9,25)
 ,(803,14,64)
 ,(804,67,66)
 ,(805,53,2)
 ,(806,49,46)
 ,(807,97,81)
 ,(808,67,58)
 ,(809,23,20)
 ,(810,67,68)
 ,(811,33,65)
 ,(812,88,37)
 ,(813,80,98)
 ,(814,16,50)
 ,(815,54,83)
 ,(816,7,6)
 ,(817,29,40)
 ,(818,94,54)
 ,(819,51,52)
 ,(820,80,3)
 ,(821,72,66)
 ,(822,15,2)
 ,(823,55,50)
 ,(824,50,56)
 ,(825,83,5)
 ,(826,49,70)
 ,(827,58,6)
 ,(828,2,62)
 ,(829,62,27)
 ,(830,87,60)
 ,(831,65,14)
 ,(832,31,79)
 ,(833,34,84)
 ,(834,91,69)
 ,(835,43,52)
 ,(836,1,63)
 ,(837,97,84)
 ,(838,84,22)
 ,(839,74,9)
 ,(840,20,24)
 ,(841,48,46)
 ,(842,35,59)
 ,(843,40,39)
 ,(844,26,66)
 ,(845,49,67)
 ,(846,90,52)
 ,(847,44,11)
 ,(848,9,80)
 ,(849,72,31)
 ,(850,12,39)
 ,(851,12,63)
 ,(852,92,100)
 ,(853,72,72)
 ,(854,12,88)
 ,(855,79,46)
 ,(856,2,20)
 ,(857,54,75)
 ,(858,64,9)
 ,(859,84,62)
 ,(860,4,32)
 ,(861,91,41)
 ,(862,95,20)
 ,(863,5,31)
 ,(864,37,60)
 ,(865,3,55)
 ,(866,2,87)
 ,(867,54,54)
 ,(868,89,29)
 ,(869,73,98)
 ,(870,54,21)
 ,(871,11,22)
 ,(872,45,18)
 ,(873,20,45)
 ,(874,31,29)
 ,(875,32,57)
 ,(876,38,8)
 ,(877,76,64)
 ,(878,29,84)
 ,(879,2,90)
 ,(880,93,54)
 ,(881,6,60)
 ,(882,49,26)
 ,(883,31,31)
 ,(884,50,89)
 ,(885,76,97)
 ,(886,73,14)
 ,(887,60,7)
 ,(888,23,97)
 ,(889,13,23)
 ,(890,42,33)
 ,(891,47,88)
 ,(892,34,76)
 ,(893,1,61)
 ,(894,71,77)
 ,(895,30,84)
 ,(896,53,27)
 ,(897,30,28)
 ,(898,4,79)
 ,(899,24,12)
 ,(900,47,80)
 ,(901,37,98)
 ,(902,55,82)
 ,(903,37,82)
 ,(904,19,11)
 ,(905,2,17)
 ,(906,68,46)
 ,(907,72,56)
 ,(908,42,44)
 ,(909,80,31)
 ,(910,41,39)
 ,(911,27,57)
 ,(912,25,92)
 ,(913,63,20)
 ,(914,91,8)
 ,(915,99,73)
 ,(916,43,15)
 ,(917,65,89)
 ,(918,56,42)
 ,(919,61,63)
 ,(920,30,41)
 ,(921,43,80)
 ,(922,32,58)
 ,(923,77,7)
 ,(924,32,66)
 ,(925,7,34)
 ,(926,77,47)
 ,(927,45,58)
 ,(928,50,68)
 ,(929,2,45)
 ,(930,80,31)
 ,(931,9,80)
 ,(932,72,85)
 ,(933,6,72)
 ,(934,56,10)
 ,(935,57,56)
 ,(936,51,78)
 ,(937,13,45)
 ,(938,13,21)
 ,(939,48,72)
 ,(940,9,52)
 ,(941,2,59)
 ,(942,18,64)
 ,(943,43,66)
 ,(944,72,85)
 ,(945,15,76)
 ,(946,22,96)
 ,(947,71,56)
 ,(948,10,53)
 ,(949,72,5)
 ,(950,87,69)
 ,(951,88,38)
 ,(952,74,86)
 ,(953,43,17)
 ,(954,95,72)
 ,(955,4,100)
 ,(956,5,41)
 ,(957,78,76)
 ,(958,5,17)
 ,(959,12,78)
 ,(960,26,71)
 ,(961,23,88)
 ,(962,22,88)
 ,(963,41,99)
 ,(964,1,1)
 ,(965,33,60)
 ,(966,55,72)
 ,(967,20,20)
 ,(968,8,10)
 ,(969,35,53)
 ,(970,48,96)
 ,(971,31,71)
 ,(972,53,69)
 ,(973,9,70)
 ,(974,53,11)
 ,(975,28,82)
 ,(976,25,17)
 ,(977,89,92)
 ,(978,5,22)
 ,(979,17,90)
 ,(980,86,38)
 ,(981,7,91)
 ,(982,36,5)
 ,(983,79,64)
 ,(984,15,77)
 ,(985,92,93)
 ,(986,35,94)
 ,(987,30,69)
 ,(988,12,1)
 ,(989,52,10)
 ,(990,53,15)
 ,(991,74,2)
 ,(992,8,28)
 ,(993,1,44)
 ,(994,23,2)
 ,(995,86,65)
 ,(996,80,72)
 ,(997,78,65)
 ,(998,42,66)
 ,(999,40,26)
 ,(1000,61,5)
) AS [Source] ([RelationshipID],[User1ID],[User2ID])
ON ([Target].[RelationshipID] = [Source].[RelationshipID])
WHEN MATCHED AND (
	NULLIF([Source].[User1ID], [Target].[User1ID]) IS NOT NULL OR NULLIF([Target].[User1ID], [Source].[User1ID]) IS NOT NULL OR 
	NULLIF([Source].[User2ID], [Target].[User2ID]) IS NOT NULL OR NULLIF([Target].[User2ID], [Source].[User2ID]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[User1ID] = [Source].[User1ID], 
  [Target].[User2ID] = [Source].[User2ID]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([RelationshipID],[User1ID],[User2ID])
 VALUES([Source].[RelationshipID],[Source].[User1ID],[Source].[User2ID])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Relationship]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Relationship] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO


SET NOCOUNT OFF
GO